{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","Menu","menu","dishes","map","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","RenderDish","RenderComments","comments","postComment","dishId","comm","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","rating","setState","outline","onClick","isOpen","toggle","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","ADD_COMMENT","COMMENTS_FAILED","ADD_COMMENTS","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","console","log","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedBack","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d8e6180.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading...</p>\n        </div>\n    );\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({ item, isLoading, errMess }) {\n\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        return (\n            <FadeTransform in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    }\n}\n\nfunction Home(props) {\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m1\">\n                    <RenderCard item={props.dish}\n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess}\n                    />\n                </div>\n                <div className=\"col-12 col-md m1\">\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promosLoading}\n                        errMess={props.promosErrMess} />\n                </div>\n                <div className=\"col-12 col-md m1\">\n                    <RenderCard item={props.leader}\n                        isLoading={props.leadersLoading}\n                        errMess={props.leadersErrMess} />\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem({ dish }) {\n    return (\n        <Card>\n            <Link to = {`/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={ baseUrl + dish.image} alt={dish.name}></CardImg>\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\n\nconst Menu = (props) => {\n\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if(props.dishes.isLoading){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else \n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to = \"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            Menu\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n\n\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        // console.log(\"Current State is: \" + JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"container\">\n\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            Contact Us\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>\n                                    First Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        className=\"form-control\"\n                                        placeholder=\"First Name\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>\n                                    Last Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        className=\"form-control\"\n                                        placeholder=\"Last Name\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>\n                                    Contact Tel.\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        className=\"form-control\"\n                                        placeholder=\"Tel. Number\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>\n                                    Email\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        className=\"form-control\"\n                                        placeholder=\"Email\"\n                                        validators={{\n                                            required, validEmail\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select name=\"contactType\"\n                                        model=\".contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>\n                                    Your feedback\n                                </Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({ leader }) {\n    return (\n        <Fade in>\n            <div key={leader.id} className=\"col-12 mt-5\">\n                <Media tag=\"li\">\n                    <Media left middle>\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\n                    </Media>\n                    <Media body className=\"ml-5\">\n                        <Media heading>{leader.name}</Media>\n                        <p>{leader.designation}</p>\n                        <p>{leader.description}</p>\n                    </Media>\n                </Media>\n            </div>\n        </Fade>\n    );\n}\n\n\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <RenderLeader leader={leader} />\n        );\n    });\n\n    //Fetch Leaders.\n    function data() {\n        if (props.leaders.isLoading) {\n            return (\n                <Loading />\n            );\n        }\n        else if (props.leaders.errMess) {\n            return (\n                <h4>{props.leaders.errMess}</h4>\n            );\n        }\n        else {\n            return (\n                <Media list>\n                    <Stagger in>\n                        {leaders}\n                    </Stagger>\n                </Media>\n            );\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    {data()}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About; ","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Button, Modal, ModalHeader, ModalBody, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\n\nfunction RenderDish({ dish }) {\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <FadeTransform in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}></CardImg>\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </ FadeTransform>\n        </div>\n    );\n}\n\nfunction RenderComments({ comments, postComment, dishId }) {\n\n    const comm = comments.map((comment) => {\n        //let date = new Date(comment.date);\n        return (\n            <Fade in>\n                <li key={comment.id}>\n                    <p>{comment.comment}</p>\n                    <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\n                </li>\n            </Fade>\n        );\n    });\n\n    if (comments != null) {\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul className=\"list-unstyled\">\n                    <Stagger in>\n                        {comm}\n                    </Stagger>\n                </ul>\n                <CommentForm dishId={dishId} postComment={postComment} />\n            </div>\n        );\n    } else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        }\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\">\n                    </span> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}> Submit Comment </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n\n                            <Row>\n                                <Label htmlFor=\"firstname\" md={12}>\n                                    Rating\n                                </Label>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Control.select name=\"rating\"\n                                        model=\".rating\"\n                                        className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Label htmlFor=\"author\" md={12}>\n                                    Your Name\n                                </Label>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        className=\"form-control\"\n                                        placeholder=\"Your Name\"\n                                        validators={{\n                                            minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Label htmlFor=\"comment\" md={12}>\n                                    Comment\n                                </Label>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        rows=\"6\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\n\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/menu\">Menu</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            {props.dish.name}\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    < RenderDish dish={props.dish} />\n                    < RenderComments comments={props.comments}\n                        postComment={props.postComment}\n                        dishId={props.dish.id} />\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div></div>\n        );\n    }\n\n}\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler, Collapse, NavItem,\n        Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n \nclass Header extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        }\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav(){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event){\n        this.toggleModal();\n        alert(\"Username: \"+this.username.value+ \", Password: \"+ this.password.value +\n         \", Remember: \"+this.remember.checked);\n         event.preventDefault();\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav}/>\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\"/>\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/home\">\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                    <span className=\"fa fa-info fa-lg\"></span> About Us\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/menu\">\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\n                                    <span className=\"fa fa-addres-card fa-lg\"></span> Contact Us\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Button outline onClick={this.toggleModal}>\n                                    <span className=\"fa fa-sign-in fa-lg\">\n                                    </span> Login\n                                </Button>\n                            </NavItem>\n                        </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}> Login </ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" \n                                    innerRef={(input) => this.username = input}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" \n                                    innerRef={(input) => this.password = input}/>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" \n                                        innerRef={(input) => this.remember = input}/>\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                                Login\n                            </Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","// COMMENTS\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\n// DISHES\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n// Promotions\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n// Leaders\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('Post comments ', error.message);\n            alert('Your comment could not be posted\\nError: ', error.message)\n        });\n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n// Leaders Data\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n// Post Feedback\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum, \n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message\n    }\n\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(response => {\n            console.log('Feedback posted: '+response)\n            alert('Thank you for your feedback!\\n'+JSON.stringify(newFeedback));\n        })\n        .catch(error => {\n            console.log('Post feedback ', error.message);\n            alert('Your feedback could not be posted\\nError: ', error.message)\n        });\n}\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from \"./MenuComponent\";\nimport Contact from \"./ContactComponent\"\nimport About from \"./AboutComponent\"\nimport DishDetail from './DishDetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchPromos, fetchComments, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => { dispatch(fetchDishes()) },\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n  fetchComments: () => { dispatch(fetchComments()) },\n  fetchPromos: () => { dispatch(fetchPromos()) },\n  fetchLeaders: () => { dispatch(fetchLeaders()) },\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => \n  dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\n});\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n\n    const HomePage = () => {\n      return (\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishesErrMess={this.props.dishes.errMess}\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n          promosLoading={this.props.promotions.isLoading}\n          promosErrMess={this.props.promotions.errMess}\n          //Leader\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n          leadersLoading={this.props.leaders.isLoading}\n          leadersErrMess={this.props.leaders.errMess}\n          // leader={this.props.leaders.filter((leader) => leader.featured)[0]}\n        />\n      );\n    }\n\n    const DishWithId = ({ match }) => {\n      return (\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n          <Switch>\n            <Route path=\"/home\" component={HomePage} />\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\n            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\n            <Redirect to=\"/home\" />\n          </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\n\n        default:\n            return state;   \n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return { ...state, errMess: null, comments: action.payload }\n\n        case ActionTypes.COMMENTS_FAILED:\n            return { ...state, errMess: action.payload, comments: [] }\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments:  state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n    }, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload}\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: []}\n        \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload }\n\n        case ActionTypes.LEADERS_LOADING:\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\n\n        case ActionTypes.LEADERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, leaders: [] }\n\n        default:\n            return state;\n    }\n}","export const InitialFeedBack = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n\n}","import React, { Component } from 'react'\nimport Main from \"./components/MainComponent\"\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedBack } from './forms';  \n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions, \n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedBack\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}