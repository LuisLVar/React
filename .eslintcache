[{"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/reportWebVitals.js":"1","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/index.js":"2","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/App.js":"3","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/MenuComponent.js":"4","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/dishes.js":"5","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/DishDetailComponent.js":"6","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/MainComponent.js":"7","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/HeaderComponent.js":"8","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/FooterComponent.js":"9","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/HomeComponent.js":"10","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/ContactComponent.js":"11","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/comments.js":"12","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/promotions.js":"13","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/AboutComponent.js":"14","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/leaders.js":"15","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/configureStore.js":"16","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/dishes.js":"17","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/promotions.js":"18","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/ActionTypes.js":"19"},{"size":362,"mtime":1610654675284,"results":"20","hashOfConfig":"21"},{"size":643,"mtime":1610734077705,"results":"22","hashOfConfig":"21"},{"size":530,"mtime":1611172532084,"results":"23","hashOfConfig":"21"},{"size":1417,"mtime":1610750879440,"results":"24","hashOfConfig":"21"},{"size":1448,"mtime":1610746926850,"results":"25","hashOfConfig":"21"},{"size":7173,"mtime":1611333379969,"results":"26","hashOfConfig":"21"},{"size":1917,"mtime":1611172846362,"results":"27","hashOfConfig":"21"},{"size":5410,"mtime":1611166932679,"results":"28","hashOfConfig":"21"},{"size":2585,"mtime":1610737363219,"results":"29","hashOfConfig":"21"},{"size":1083,"mtime":1610751954325,"results":"30","hashOfConfig":"21"},{"size":10988,"mtime":1611180067361,"results":"31","hashOfConfig":"21"},{"size":4117,"mtime":1610746970379,"results":"32","hashOfConfig":"21"},{"size":435,"mtime":1610746985943,"results":"33","hashOfConfig":"21"},{"size":4253,"mtime":1610760480643,"results":"34","hashOfConfig":"21"},{"size":2345,"mtime":1610747070723,"results":"35","hashOfConfig":"21"},{"size":468,"mtime":1611276065471,"results":"36","hashOfConfig":"21"},{"size":171,"mtime":1611275809966,"results":"37","hashOfConfig":"21"},{"size":187,"mtime":1611275925584,"results":"38","hashOfConfig":"21"},{"size":41,"mtime":1611332239938,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"7k9y2n",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/reportWebVitals.js",[],["85","86"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/index.js",[],["87","88"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/App.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/MenuComponent.js",[],["89","90"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/dishes.js",[],["91","92"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/DishDetailComponent.js",["93","94","95"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/MainComponent.js",["96"],"import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from \"./MenuComponent\";\nimport Contact from \"./ContactComponent\"\nimport About from \"./AboutComponent\"\nimport DishDetail from './DishDetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nclass Main extends Component {\n\n  constructor(props){\n    super(props);\n\n  }\n\n  render(){\n\n    const HomePage = () => {\n        return(\n            <Home dish={this.props.dishes.filter((dish)=> dish.featured)[0]}\n            promotion={this.props.promotions.filter((promo)=> promo.featured)[0]}\n            leader={this.props.leaders.filter((leader)=> leader.featured)[0]}\n            />\n        );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n        <DishDetail dish={this.props.dishes.filter((dish)=> dish.id === parseInt(match.params.dishId, 10))[0]}\n        comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Header />\n        <Switch>\n            <Route path=\"/home\" component={HomePage} />\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}  /> } />\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\n            <Route exact path=\"/contactus\" component={Contact} />\n            <Route exact path=\"/aboutus\" component={ () => <About leaders={this.props.leaders}/>} />\n            <Redirect to=\"/home\"/>\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(Main));\n",["97","98"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/HeaderComponent.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/FooterComponent.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/HomeComponent.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/ContactComponent.js",["99","100","101","102","103","104","105","106","107"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, FormGroup, Label, Input, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        alert(\"Current State is: \" + JSON.stringify(values))\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"container\">\n\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            Contact Us\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>\n                                    First Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        className=\"form-control\"\n                                        placeholder=\"First Name\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>\n                                    Last Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        className=\"form-control\"\n                                        placeholder=\"Last Name\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>\n                                    Contact Tel.\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        className=\"form-control\"\n                                        placeholder=\"Tel. Number\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>\n                                    Email\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        className=\"form-control\"\n                                        placeholder=\"Email\"\n                                        validators={{\n                                            required, validEmail\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select name=\"contactType\"\n                                        model=\".contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>\n                                    Your feedback\n                                </Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/comments.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/promotions.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/AboutComponent.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/leaders.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/configureStore.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/dishes.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/promotions.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/ActionTypes.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"108","replacedBy":"114"},{"ruleId":"110","replacedBy":"115"},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":100,"column":37,"nodeType":"120","endLine":102,"endColumn":66},{"ruleId":"118","severity":1,"message":"121","line":118,"column":37,"nodeType":"120","endLine":123,"endColumn":46},{"ruleId":"118","severity":1,"message":"122","line":142,"column":37,"nodeType":"120","endLine":144,"endColumn":68},{"ruleId":"123","severity":1,"message":"124","line":24,"column":3,"nodeType":"125","messageId":"126","endLine":27,"endColumn":4},{"ruleId":"108","replacedBy":"127"},{"ruleId":"110","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":46,"nodeType":"131","messageId":"132","endLine":2,"endColumn":55},{"ruleId":"129","severity":1,"message":"133","line":2,"column":64,"nodeType":"131","messageId":"132","endLine":2,"endColumn":69},{"ruleId":"118","severity":1,"message":"121","line":85,"column":37,"nodeType":"120","endLine":90,"endColumn":46},{"ruleId":"118","severity":1,"message":"121","line":108,"column":37,"nodeType":"120","endLine":113,"endColumn":46},{"ruleId":"118","severity":1,"message":"121","line":131,"column":37,"nodeType":"120","endLine":136,"endColumn":46},{"ruleId":"118","severity":1,"message":"121","line":155,"column":37,"nodeType":"120","endLine":160,"endColumn":46},{"ruleId":"118","severity":1,"message":"134","line":177,"column":45,"nodeType":"120","endLine":178,"endColumn":80},{"ruleId":"118","severity":1,"message":"119","line":184,"column":37,"nodeType":"120","endLine":186,"endColumn":66},{"ruleId":"118","severity":1,"message":"122","line":197,"column":37,"nodeType":"120","endLine":199,"endColumn":68},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],["135"],["136"],["135"],["136"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["135"],["136"],"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]