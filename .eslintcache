[{"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/reportWebVitals.js":"1","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/index.js":"2","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/App.js":"3","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/MenuComponent.js":"4","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/dishes.js":"5","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/DishDetailComponent.js":"6","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/MainComponent.js":"7","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/HeaderComponent.js":"8","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/FooterComponent.js":"9","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/HomeComponent.js":"10","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/ContactComponent.js":"11","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/comments.js":"12","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/promotions.js":"13","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/AboutComponent.js":"14","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/leaders.js":"15","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/configureStore.js":"16","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/dishes.js":"17","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/promotions.js":"18","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/ActionTypes.js":"19","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/comments.js":"20","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/ActionCreators.js":"21","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/forms.js":"22","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/LoadingComponent.js":"23","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/leaders.js":"24","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/baseUrl.js":"25"},{"size":362,"mtime":1610654675284,"results":"26","hashOfConfig":"27"},{"size":643,"mtime":1610734077705,"results":"28","hashOfConfig":"27"},{"size":530,"mtime":1611172532084,"results":"29","hashOfConfig":"27"},{"size":2078,"mtime":1611702505854,"results":"30","hashOfConfig":"27"},{"size":1448,"mtime":1610746926850,"results":"31","hashOfConfig":"27"},{"size":7783,"mtime":1611809167341,"results":"32","hashOfConfig":"27"},{"size":3085,"mtime":1611809116234,"results":"33","hashOfConfig":"27"},{"size":5410,"mtime":1611166932679,"results":"34","hashOfConfig":"27"},{"size":2585,"mtime":1610737363219,"results":"35","hashOfConfig":"27"},{"size":1672,"mtime":1611702624819,"results":"36","hashOfConfig":"27"},{"size":11040,"mtime":1611693741169,"results":"37","hashOfConfig":"27"},{"size":4117,"mtime":1610746970379,"results":"38","hashOfConfig":"27"},{"size":435,"mtime":1610746985943,"results":"39","hashOfConfig":"27"},{"size":4253,"mtime":1610760480643,"results":"40","hashOfConfig":"27"},{"size":2345,"mtime":1610747070723,"results":"41","hashOfConfig":"27"},{"size":774,"mtime":1611693452617,"results":"42","hashOfConfig":"27"},{"size":599,"mtime":1611689465224,"results":"43","hashOfConfig":"27"},{"size":625,"mtime":1611702203535,"results":"44","hashOfConfig":"27"},{"size":404,"mtime":1611701369631,"results":"45","hashOfConfig":"27"},{"size":594,"mtime":1611809655531,"results":"46","hashOfConfig":"27"},{"size":4306,"mtime":1611809611878,"results":"47","hashOfConfig":"27"},{"size":162,"mtime":1611693329479,"results":"48","hashOfConfig":"27"},{"size":244,"mtime":1611689621993,"results":"49","hashOfConfig":"27"},{"size":175,"mtime":1611275887065,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1611701263302,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"7k9y2n",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/reportWebVitals.js",[],["112","113"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/index.js",[],["114","115"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/App.js",[],["116","117"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/MenuComponent.js",[],["118","119"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/dishes.js",[],["120","121"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/DishDetailComponent.js",["122","123","124"],"import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Button, Modal, ModalHeader, ModalBody, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\n\nfunction RenderDish({ dish }) {\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <Card>\n                <CardImg width=\"100%\" src={ baseUrl + dish.image} alt={dish.name}></CardImg>\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nfunction RenderComments({ comments, postComment, dishId }) {\n\n    const comm = comments.map((comment) => {\n        //let date = new Date(comment.date);\n        return (\n            <div key={comment.id}>\n                <p>{comment.comment}</p>\n                <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\n            </div>\n        );\n    });\n\n    if (comments != null) {\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul className=\"list-unstyled\">{comm}</ul>\n                <CommentForm dishId={dishId} postComment={postComment} />\n            </div>\n        );\n    } else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        }\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\">\n                    </span> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}> Submit Comment </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n\n                            <Row>\n                                <Label htmlFor=\"firstname\" md={12}>\n                                    Rating\n                                </Label>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Control.select name=\"rating\"\n                                        model=\".rating\"\n                                        className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Label htmlFor=\"author\" md={12}>\n                                    Your Name\n                                </Label>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        className=\"form-control\"\n                                        placeholder=\"Your Name\"\n                                        validators={{\n                                            minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Label htmlFor=\"comment\" md={12}>\n                                    Comment\n                                </Label>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        rows=\"6\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\n\n\nconst DishDetail = (props) => {\n    if(props.isLoading){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/menu\">Menu</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            {props.dish.name}\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    < RenderDish dish={props.dish} />\n                    < RenderComments comments={props.comments}\n                        postComment={props.postComment}\n                        dishId={props.dish.id} />\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div></div>\n        );\n    }\n\n}\n\nexport default DishDetail;","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/MainComponent.js",["125"],"import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from \"./MenuComponent\";\nimport Contact from \"./ContactComponent\"\nimport About from \"./AboutComponent\"\nimport DishDetail from './DishDetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchPromos, fetchComments } from '../redux/ActionCreators'; \nimport { actions } from 'react-redux-form';\n\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => { dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n  fetchComments: () => { dispatch(fetchComments())},\n  fetchPromos: () => { dispatch(fetchPromos())}\n});\n\nclass Main extends Component {\n\n  constructor(props){\n    super(props);\n\n  }\n\n  componentDidMount(){\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n  }\n\n  render(){\n\n    const HomePage = () => {\n        return(\n            <Home dish={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]}\n            dishesLoading={this.props.dishes.isLoading}\n            dishesErrMess={this.props.dishes.errMess}\n            promotion={this.props.promotions.promotions.filter((promo)=> promo.featured)[0]}\n            promosLoading={this.props.promotions.isLoading}\n            promosErrMess={this.props.promotions.errMess}\n            leader={this.props.leaders.filter((leader)=> leader.featured)[0]}\n            />\n        );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n        <DishDetail dish={this.props.dishes.dishes.filter((dish)=> dish.id === parseInt(match.params.dishId, 10))[0]}\n        isLoading={this.props.dishes.isLoading}\n        errMess={this.props.dishes.errMess}\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n        commentsErrMess={this.props.comments.errMess}\n        postComment={this.props.postComment}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Header />\n        <Switch>\n            <Route path=\"/home\" component={HomePage} />\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}  /> } />\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\n            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\n            <Route exact path=\"/aboutus\" component={ () => <About leaders={this.props.leaders}/>} />\n            <Redirect to=\"/home\"/>\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/HeaderComponent.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/FooterComponent.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/HomeComponent.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/ContactComponent.js",["126","127","128","129","130","131","132","133","134","135"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, FormGroup, Label, Input, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        alert(\"Current State is: \" + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"container\">\n\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>\n                            Contact Us\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>\n                                    First Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        className=\"form-control\"\n                                        placeholder=\"First Name\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>\n                                    Last Name\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        className=\"form-control\"\n                                        placeholder=\"Last Name\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 character or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>\n                                    Contact Tel.\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        className=\"form-control\"\n                                        placeholder=\"Tel. Number\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>\n                                    Email\n                                </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        className=\"form-control\"\n                                        placeholder=\"Email\"\n                                        validators={{\n                                            required, validEmail\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select name=\"contactType\"\n                                        model=\".contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>\n                                    Your feedback\n                                </Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/comments.js",[],["136","137"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/promotions.js",[],["138","139"],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/AboutComponent.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/leaders.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/configureStore.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/dishes.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/promotions.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/ActionTypes.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/comments.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/ActionCreators.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/forms.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/components/LoadingComponent.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/redux/leaders.js",[],"/home/luis/Escritorio/Online Courses/Coursera/Full-Stack React/Course2-React/confusion/src/shared/baseUrl.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"140","replacedBy":"146"},{"ruleId":"142","replacedBy":"147"},{"ruleId":"140","replacedBy":"148"},{"ruleId":"142","replacedBy":"149"},{"ruleId":"140","replacedBy":"150"},{"ruleId":"142","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":98,"column":37,"nodeType":"154","endLine":100,"endColumn":66},{"ruleId":"152","severity":1,"message":"155","line":116,"column":37,"nodeType":"154","endLine":121,"endColumn":46},{"ruleId":"152","severity":1,"message":"156","line":140,"column":37,"nodeType":"154","endLine":142,"endColumn":68},{"ruleId":"157","severity":1,"message":"158","line":34,"column":3,"nodeType":"159","messageId":"160","endLine":37,"endColumn":4},{"ruleId":"161","severity":1,"message":"162","line":2,"column":46,"nodeType":"163","messageId":"164","endLine":2,"endColumn":55},{"ruleId":"161","severity":1,"message":"165","line":2,"column":64,"nodeType":"163","messageId":"164","endLine":2,"endColumn":69},{"ruleId":"161","severity":1,"message":"166","line":4,"column":33,"nodeType":"163","messageId":"164","endLine":4,"endColumn":40},{"ruleId":"152","severity":1,"message":"155","line":86,"column":37,"nodeType":"154","endLine":91,"endColumn":46},{"ruleId":"152","severity":1,"message":"155","line":109,"column":37,"nodeType":"154","endLine":114,"endColumn":46},{"ruleId":"152","severity":1,"message":"155","line":132,"column":37,"nodeType":"154","endLine":137,"endColumn":46},{"ruleId":"152","severity":1,"message":"155","line":156,"column":37,"nodeType":"154","endLine":161,"endColumn":46},{"ruleId":"152","severity":1,"message":"167","line":178,"column":45,"nodeType":"154","endLine":179,"endColumn":80},{"ruleId":"152","severity":1,"message":"153","line":185,"column":37,"nodeType":"154","endLine":187,"endColumn":66},{"ruleId":"152","severity":1,"message":"156","line":198,"column":37,"nodeType":"154","endLine":200,"endColumn":68},{"ruleId":"140","replacedBy":"168"},{"ruleId":"142","replacedBy":"169"},{"ruleId":"140","replacedBy":"170"},{"ruleId":"142","replacedBy":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],["172"],["173"],["172"],["173"],["172"],["173"],["172"],["173"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'actions' is defined but never used.","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["172"],["173"],["172"],["173"],"no-global-assign","no-unsafe-negation"]